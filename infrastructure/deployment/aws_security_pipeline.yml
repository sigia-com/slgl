AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWS CloudFormation aws-security Continuous Delivery Infrastructure

Parameters:
  PipelineName:
    Description: A name for pipeline
    Type: String
    Default: "aws-security-setup"
  GitHubOwner:
    Type: String
    Default: securionpay
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubRepo:
    Type: String
    Default: sigia-ledger
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubBranch:
    Type: String
    Default: aws-infra
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'
  SlackIncomingWebHookURL:
    Type: String
    Default: "https://hooks.slack.com/services/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"
  SlackChannel:
    Type: String
    Default: "#slgl-aws"
  StackPrefix:
    Default: 'aws-security'
    Description: Stack Prefix for AWS security CloudFormation Stacks
    Type: String
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: "PublicRead"
      VersioningConfiguration:
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  AmazonCloudWatchEventRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'codepipeline:StartPipelineExecution'
                Resource: !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              Namespace: SourceVariables
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: S3
              OutputArtifacts:
                - Name: !Sub '${StackPrefix}-SourceArtifact'
              Configuration:
                S3Bucket: "slgl-artifact-github-bucket"
                S3ObjectKey: latest/release-package.zip
                PollForSourceChanges: False
              RunOrder: 1
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Sub '${StackPrefix}-CodeBuild'
              InputArtifacts:
                - Name: !Sub '${StackPrefix}-SourceArtifact'
              Name: PackageExport
              OutputArtifacts:
                - Name: !Sub '${StackPrefix}-BuildArtifact'
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployStackSetCustomResource
              Region: "eu-west-1"
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: !Sub '${StackPrefix}-BuildArtifact'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub '${StackPrefix}-helpers'
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                TemplatePath: !Sub '${StackPrefix}-BuildArtifact::infrastructure/StackSetsResource/stack-set-function-template.yml'
              RunOrder: 1
            - Name: SaveTemplatesToS3
              Region: "eu-west-1"
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: !Sub '${StackPrefix}-BuildArtifact'
              Configuration:
                BucketName: !Ref ArtifactStoreBucket
                ObjectKey: aws-infra/latest
                Extract: true
              RunOrder: 1
            - Name: DeployCloudTrail
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: !Sub '${StackPrefix}-BuildArtifact'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub '${StackPrefix}-cloudtrail'
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                TemplatePath: !Sub '${StackPrefix}-BuildArtifact::infrastructure/deployment/cloudtrail.yml'
                ParameterOverrides: !Sub |
                  {
                    "NotifyEmail" : "szymon+slgl@securionpay.com"
                  }
              RunOrder: 1
            - Name: DeployAWSConfigViaStackSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: !Sub '${StackPrefix}-BuildArtifact'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub '${StackPrefix}-config-stackset'
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                TemplatePath: !Sub '${StackPrefix}-BuildArtifact::infrastructure/deployment/stack_set.yml'
                ParameterOverrides: !Sub |
                  {
                    "TemplateURL" : "https://${ArtifactStoreBucket.DomainName}/aws-infra/latest/infrastructure/deployment/config.yml",
                    "StackSetName" : "${StackPrefix}-config-stackset",
                    "StackSetDescription" : "${StackPrefix}-config-stackset",
                    "Capabilities": "CAPABILITY_IAM",
                    "AdministrationRoleARN": "${AdministrationRole.Arn}",
                    "ExecutionRoleName": "${ExecutionRole}",
                    "MasterAccountId": "${AWS::AccountId}",
                    "StackInstancesRegions": "us-east-2,us-east-1,us-west-1,us-west-2,ca-central-1,ap-south-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ap-northeast-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,sa-east-1"
                  }
              RunOrder: 2
            - Name: DeployGuardDutyViaStackSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: !Sub '${StackPrefix}-BuildArtifact'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub '${StackPrefix}-guard-duty-stackset'
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                TemplatePath: !Sub '${StackPrefix}-BuildArtifact::infrastructure/deployment/stack_set.yml'
                ParameterOverrides: !Sub |
                  {
                    "TemplateURL" : "https://${ArtifactStoreBucket.DomainName}/aws-infra/latest/infrastructure/deployment/guard_duty.yml",
                    "StackSetName" : "${StackPrefix}-guard-duty-stackset",
                    "StackSetDescription" : "${StackPrefix}-guard-duty-stackset",
                    "Capabilities": "CAPABILITY_IAM",
                    "AdministrationRoleARN": "${AdministrationRole.Arn}",
                    "ExecutionRoleName": "${ExecutionRole}",
                    "StackInstancesRegions": "us-east-2,us-east-1,us-west-1,us-west-2,ca-central-1,ap-south-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ap-northeast-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,sa-east-1"
                  }
              RunOrder: 2
            - Name: DeploySecurityHubViaStackSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: !Sub '${StackPrefix}-BuildArtifact'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub '${StackPrefix}-security-hub-stackset'
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                TemplatePath: !Sub '${StackPrefix}-BuildArtifact::infrastructure/deployment/stack_set.yml'
                ParameterOverrides: !Sub |
                  {
                    "TemplateURL" : "https://${ArtifactStoreBucket.DomainName}/aws-infra/latest/infrastructure/deployment/security_hub.yml",
                    "StackSetName" : "${StackPrefix}-security-hub",
                    "StackSetDescription" : "${StackPrefix}-security-hub",
                    "SlackIncomingWebHookURL" : "${SlackIncomingWebHookURL}",
                    "SlackChannel" : "${SlackChannel}",
                    "Capabilities": "CAPABILITY_IAM",
                    "AdministrationRoleARN": "${AdministrationRole.Arn}",
                    "ExecutionRoleName": "${ExecutionRole}",
                    "StackInstancesRegions": "us-east-2,us-east-1,us-west-1,us-west-2,ca-central-1,ap-south-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ap-northeast-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,sa-east-1"
                  }
              RunOrder: 2
            - Name: DeployIamAccessAnalyzerViaStackSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: !Sub '${StackPrefix}-BuildArtifact'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Sub '${StackPrefix}-iam-access-analyzer-stackset'
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                TemplatePath: !Sub '${StackPrefix}-BuildArtifact::infrastructure/deployment/stack_set.yml'
                ParameterOverrides: !Sub |
                  {
                    "TemplateURL" : "https://${ArtifactStoreBucket.DomainName}/aws-infra/latest/infrastructure/deployment/iam_access_analyzer.yml",
                    "StackSetName" : "${StackPrefix}-iam-access-analyzer",
                    "StackSetDescription" : "${StackPrefix}-iam-access-analyzer",
                    "Capabilities": "CAPABILITY_IAM",
                    "AdministrationRoleARN": "${AdministrationRole.Arn}",
                    "ExecutionRoleName": "${ExecutionRole}",
                    "StackInstancesRegions": "us-east-2,us-east-1,us-west-1,us-west-2,ca-central-1,ap-south-1,ap-southeast-1,ap-southeast-2,ap-northeast-1,ap-northeast-2,eu-central-1,eu-west-1,eu-west-2,eu-west-3,sa-east-1"
                  }
              RunOrder: 2
#  GithubWebhook:
#    Type: 'AWS::CodePipeline::Webhook'
#    Properties:
#      Authentication: GITHUB_HMAC
#      AuthenticationConfiguration:
#        SecretToken: !Ref GitHubOAuthToken
#      RegisterWithThirdParty: true
#      Filters:
#      - JsonPath: "$.ref"
#        MatchEquals: refs/heads/{Branch}
#      TargetPipeline: !Ref Pipeline
#      TargetAction: Source
#      TargetPipelineVersion: !GetAtt Pipeline.Version
  PermissionsBoundaryPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub 'SLGL_${StackPrefix}_PermissionsBoundary'
      PolicyDocument:
        Statement:
          - Action:
              - '*'
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${StackPrefix}/*'
              - !Sub 'arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${StackPrefix}-CodeBuild'
              - !Sub 'arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${PipelineName}'
              - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactStoreBucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactStoreBucket}/*'
            Sid: 1
          - Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey'
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
            Sid: 2
          - Action:
              - 'iam:PassRole'
            Effect: Allow
            Resource:
              - !GetAtt CFNRole.Arn
            Sid: 3
          - Action:
              - 'cloudtrail:CreateTrail'
              - 'cloudtrail:StartLogging'
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:DescribeLogGroups'
              - 'logs:PutLogEvents'
              - 'sns:Get*'
              - 'sns:List*'
              - 'sns:Publish'
              - 'sns:Subscribe'
              - 'xray:Put*'
            Effect: Allow
            Resource: '*'
            Sid: 4
        Version: 2012-10-17
  ToolChainRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codedeploy.amazonaws.com
                - codepipeline.amazonaws.com
                - events.amazonaws.com
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeBuildAdminAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeDeployFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodePipelineFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSLambdaFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchEventsFullAccess'
      Path: /
      PermissionsBoundary: !Ref PermissionsBoundaryPolicy
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'kms:GenerateDataKey*'
                  - 'kms:Encrypt'
                  - 'kms:Decrypt'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 's3:PutObject'
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactStoreBucket}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactStoreBucket}/*'
          PolicyName: ToolChainWorkerPolicy
      RoleName: !Sub 'SLGL-${StackPrefix}-ToolChain-Role'
    Type: 'AWS::IAM::Role'
  CodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Packaging: ZIP
        Type: CODEPIPELINE
      Description: "CodeBuild Project for SLGL AWS Security Deployments"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Ref ArtifactStoreBucket
          - Name: PROJECT_ID
            Value: !Sub "${StackPrefix}"
          - Name: ACCOUNT_ID
            Value: !Ref 'AWS::AccountId'
          - Name: PARTITION
            Value: !Ref 'AWS::Partition'
          - Name: ENVIRONMENT
            Value: "beta"
        Image: 'aws/codebuild/standard:2.0'
        Type: LINUX_CONTAINER
      Name: !Sub "${StackPrefix}-CodeBuild"
      ServiceRole: !Ref ToolChainRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: infrastructure/buildspec.yml
  AdministrationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AssumeAWSCloudFormationStackSetExecutionRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/AWSCloudFormationStackSetExecutionRole"
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AWSCloudFormationStackSetExecutionRole
      AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                AWS:
                  - !GetAtt AdministrationRole.Arn
              Action:
                - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: GetPassRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:GetRole # ToDo: tighten permissions
                  - iam:PassRole # ToDo: tighten permissions
                Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'sns:*'
                  - 'qldb:*'
                  - 'dynamodb:*'
                  - 'lambda:*'
                  - 'events:*'
                  - 'logs:*'
                  - 'apigateway:*'
                  - "iam:CreateRole"
                  - "iam:DeleteRole"
                  - "iam:PutRolePolicy"
                  - "iam:DeleteRolePolicy"
                  - "iam:AttachRolePolicy"
                  - "iam:DetachRolePolicy"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "s3:GetObject"
                  - "s3:CreateBucket"
                  - "s3:DeleteBucket"
                  - 'codedeploy:CreateApplication'
                  - 'codedeploy:DeleteApplication'
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:CreateDeploymentGroup'
                  - 'codedeploy:DeleteDeploymentGroup'
                  - 'cloudwatch:PutMetricAlarm'
                  - 'cloudwatch:DeleteAlarms'
                  - 'cloudtrail:CreateTrail'
                  - 'cloudtrail:StartLogging'
                  - 'cloudtrail:DeleteTrail' # ToDo: consider if needed
                  - 'cloudtrail:UpdateTrail' # ToDo: consider if needed
                  - 'cloudformation:*' # ToDo: tighten it
                  - 'config:*' # ToDo: tighten it
                  - 'iam:*' # ToDo: tighten it
                  - 's3:*'  # ToDo: tighten it
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'cloudformation:CreateChangeSet'
                Effect: Allow
                Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31'
              - Action:
                  - 'iam:PassRole'
                Effect: Allow
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 's3:*'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'iam:PassRole'
                  - 'sns:Publish'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Effect: Allow
                Resource: !GetAtt CodeBuildProject.Arn